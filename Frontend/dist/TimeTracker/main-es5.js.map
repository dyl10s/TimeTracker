{"version":3,"sources":["webpack:///src/app/views/auth/login/login.component.ts","webpack:///src/app/views/auth/login/login.component.html","webpack:///src/app/core/services/auth/token-interceptor.service.ts","webpack:///src/app/core/services/auth/auth-api.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/core/services/auth/jwt.service.ts","webpack:///src/app/views/auth/logout/logout.component.ts","webpack:///src/app/views/auth/register/register.component.ts","webpack:///src/app/views/auth/register/register.component.html","webpack:///src/app/views/dashboard/profile/profile.component.ts","webpack:///src/app/views/dashboard/profile/profile.component.html","webpack:///src/app/core/guards/auth.guard.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["LoginComponent","authService","JwtService","router","loginForm","email","password","isLoading","error","login","Email","Password","subscribe","response","success","setTokens","data","accessToken","refreshToken","navigate","controls","reset","message","TokenInterceptorService","jwtService","request","next","isAuthenticated","clone","setHeaders","Authorization","getJWT","handle","AuthApiService","http","api","loginUser","post","registerUser","refresh","environment","production","jwtHelper","jwt","localStorage","setItem","decodeToken","getItem","isTokenExpired","clear","LogoutComponent","logout","RegisterComponent","activatedRoute","registerForm","firstName","lastName","confirmPassword","inviteCode","patchValue","snapshot","queryParamMap","get","register","Name","trim","InviteCode","ProfileComponent","AuthGuard","state","isAuth","queryParams","returnUrl","url","AppComponent","tokenGetter","AppModule","provide","useClass","multi","forRoot","name","config","routes","path","canActivate","children","component","redirectTo","AppRoutingModule","bootstrapModule","err","console","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { GenericResponseDTO } from '../../../core/models/GenericResponseDTO.model';\r\nimport { AuthApiService } from '../../../core/services/auth/auth-api.service';\r\nimport { JwtService } from '../../../core/services/auth/jwt.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup = new FormGroup({\r\n    email: new FormControl(''),\r\n    password: new FormControl('')\r\n  });\r\n\r\n  error: string;\r\n  isLoading: boolean = false;\r\n\r\n  constructor(\r\n    private authService: AuthApiService,\r\n    private JwtService: JwtService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login(loginForm: any) {\r\n    this.error = '';\r\n    this.isLoading = true;\r\n    if(!loginForm.email || !loginForm.password){\r\n      this.error = \"Please enter email and password.\";\r\n      this.isLoading = false;\r\n      return;\r\n    } \r\n\r\n    this.authService.login({ \r\n      Email: loginForm.email, \r\n      Password: loginForm.password \r\n    }).subscribe((response: GenericResponseDTO) => {\r\n      if(response.success) {\r\n        // Handle Successful Login\r\n        this.JwtService.setTokens(response.data.accessToken, response.data.refreshToken);\r\n  \r\n        // TODO: Remove alert and route to dashboard\r\n        this.router.navigate(['/dashboard/profile']);\r\n      } else {\r\n        this.loginForm.controls['password'].reset();\r\n        this.error = response.message;\r\n      }\r\n      this.isLoading = false;\r\n    }, (error: any) => {\r\n      this.error = 'API Not Connected.';\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n}\r\n","<nb-layout-column class=\"column\">\r\n    <nb-card class=\"login-container\">\r\n      <nb-card-header>\r\n        <h4 class=\"text-black\">Login</h4>\r\n      </nb-card-header>\r\n\r\n      <nb-card-body [formGroup]=\"loginForm\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Email address\"\r\n              formControlName=\"email\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Password\"\r\n              formControlName=\"password\"\r\n            />\r\n          </div>\r\n\r\n          <p class=\"error\" *ngIf=\"error\">{{ error }}</p>\r\n\r\n          <div class=\"form-group\">\r\n            <button \r\n              nbButton \r\n              fullWidth \r\n              status=\"success\" \r\n              (click)=\"login(loginForm.value)\"\r\n              [nbSpinner]=\"isLoading\"\r\n              [disabled]=\"isLoading\"\r\n              nbSpinnerStatus=\"success\">\r\n              Login\r\n            </button>\r\n          </div>\r\n          <nb-actions>\r\n            <nb-action>Not a member? <span class=\"clickable\" routerLink=\"/auth/register\">Register</span></nb-action>\r\n          </nb-actions>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </nb-layout-column>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { JwtService } from './jwt.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(public jwtService: JwtService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    if (this.jwtService.isAuthenticated()) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${this.jwtService.getJWT()}`\r\n        }\r\n      });\r\n      return next.handle(request);\r\n    } else {\r\n      return next.handle(request);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { UserDto } from '../../models/auth/UserDto.model';\r\nimport { RefreshDto } from '../../models/auth/RefreshDto.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthApiService {\r\n\r\n  private api: string = environment.api;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(loginUser: UserDto) {\r\n    return this.http.post(`${this.api}/Auth/Login`, loginUser);\r\n  }\r\n\r\n  register(registerUser: UserDto) {\r\n    return this.http.post(`${this.api}/Auth/Register`, registerUser);\r\n  }\r\n\r\n  refresh(refresh: RefreshDto) {\r\n    return this.http.post(`${this.api}/Auth/Refresh`, refresh);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api: 'https://localhost:5001'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { PayloadDTO } from '../../models/auth/PayloadDto.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtService {\r\n\r\n  constructor(public jwtHelper: JwtHelperService) {}\r\n\r\n  public setTokens(jwt: string, refresh: string) {\r\n    localStorage.setItem('accessToken', jwt);\r\n    localStorage.setItem('refreshToken', refresh);\r\n  }\r\n\r\n  public decode(): PayloadDTO {\r\n    try{\r\n      return this.jwtHelper.decodeToken(localStorage.getItem('accessToken'));\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public getJWT(){\r\n    return localStorage.getItem('accessToken');\r\n  }\r\n\r\n  public isAuthenticated() {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n\r\n    try {\r\n      return !this.jwtHelper.isTokenExpired(accessToken);\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public logout(){\r\n    localStorage.clear();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { JwtService } from 'src/app/core/services/auth/jwt.service';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  template: '<p>Logging Out...</p>'\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private jwtService: JwtService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.jwtService.logout();\r\n    this.router.navigate(['/auth/login'])\r\n  }\r\n\r\n}\r\n","import { Route } from '@angular/compiler/src/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GenericResponseDTO } from '../../../core/models/GenericResponseDTO.model';\r\nimport { AuthApiService } from '../../../core/services/auth/auth-api.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerForm: FormGroup = new FormGroup({\r\n    firstName: new FormControl(''),\r\n    lastName: new FormControl(''),\r\n    email: new FormControl(''),\r\n    password: new FormControl(''),\r\n    confirmPassword: new FormControl(''),\r\n    inviteCode: new FormControl('')\r\n  });\r\n\r\n  error: string;\r\n  isLoading: boolean = false;\r\n\r\n  constructor(\r\n    private authService: AuthApiService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm.patchValue({\r\n      inviteCode: this.activatedRoute.snapshot.queryParamMap.get('inviteCode')\r\n    });\r\n  }\r\n\r\n  register(registerForm: any) {\r\n    this.error = '';\r\n    this.isLoading = true;\r\n    if(!registerForm.firstName || \r\n      !registerForm.lastName || \r\n      !registerForm.email || \r\n      !registerForm.password ||\r\n      !registerForm.confirmPassword){\r\n      this.error = \"Please enter all fields.\";\r\n      this.isLoading = false;\r\n      return;\r\n    } \r\n\r\n    this.authService.register({ \r\n      Email: registerForm.email, \r\n      Password: registerForm.password, \r\n      Name: `${registerForm.firstName.trim()} ${registerForm.lastName.trim()}`,\r\n      InviteCode: registerForm.inviteCode\r\n    }).subscribe((response: GenericResponseDTO) => {\r\n      if(response.success) {\r\n        // Handle Successful Registration\r\n        this.router.navigate(['/auth/login']);\r\n      } else {\r\n        this.error = response.message;\r\n      }\r\n      this.isLoading = false;\r\n    }, (error: any) => {\r\n      this.error = 'API Not Connected.';\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n}\r\n","<nb-layout-column class=\"column\">\r\n    <nb-card class=\"register-container\">\r\n      <nb-card-header>\r\n        <h4 class=\"text-black\">Register</h4>\r\n      </nb-card-header>\r\n\r\n      <nb-card-body [formGroup]=\"registerForm\">\r\n         <div class=\"form-group\">\r\n            <input\r\n              type=\"name\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"First Name\"\r\n              formControlName=\"firstName\"\r\n            />\r\n          </div>\r\n           <div class=\"form-group\">\r\n            <input\r\n              type=\"name\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Last Name\"\r\n              formControlName=\"lastName\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Email address\"\r\n              formControlName=\"email\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Password\"\r\n              formControlName=\"password\"\r\n            />\r\n          </div>\r\n        <div class=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Confirm Password\"\r\n              formControlName=\"confirmPassword\"\r\n            />\r\n          </div>\r\n\r\n          <p class=\"error\" *ngIf=\"error\">{{ error }}</p>\r\n          \r\n          <div class=\"form-group\">\r\n            <button \r\n              nbButton \r\n              fullWidth \r\n              status=\"success\" \r\n              (click)=\"register(registerForm.value)\"\r\n              [nbSpinner]=\"isLoading\"\r\n              [disabled]=\"isLoading\"\r\n              nbSpinnerStatus=\"success\">\r\n              Register\r\n          </button>\r\n          </div>\r\n          <nb-actions>\r\n            <nb-action>Already a member? <span class=\"clickable\" routerLink=\"/auth/login\">Login</span></nb-action>\r\n          </nb-actions>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </nb-layout-column>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <nb-layout-column>\r\n    <h3>Basic Info</h3>\r\n\r\n    <div class=\"line\">\r\n      <div class=\"row\">\r\n        <nb-card-body class=\"form\">\r\n          <div class=\"col-25\">\r\n            <label for=\"firstName\">First Name</label>\r\n          </div>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              nbInput\r\n              placeholder=\"First Name\"\r\n            />\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <nb-card-body class=\"form\">\r\n          <div class=\"col-25\">\r\n            <label for=\"lastName\">Last Name</label>\r\n          </div>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              nbInput\r\n              placeholder=\"Last Name\"\r\n            />\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <nb-card-body class=\"form\">\r\n          <div class=\"col-25\">\r\n            <label for=\"email\">Email</label>\r\n          </div>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              nbInput\r\n              placeholder=\"Email\"\r\n              disabled\r\n            />\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <nb-card-body>\r\n          <div class=\"col-25\">\r\n            <button nbButton status=\"success\">Update Info</button>\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"line\">\r\n      <div class=\"row\">\r\n        <nb-card-body>\r\n          <h4>Change Password</h4>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"password\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Current Password\"\r\n            />\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <nb-card-body>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"password\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"New Password\"\r\n            />\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <nb-card-body>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"password\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Verify New Password\"\r\n            />\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n      <div class=\"row\">\r\n        <nb-card-body>\r\n          <div class=\"col-25\">\r\n            <button nbButton status=\"control\">Change Password</button>\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n    </div>\r\n  </nb-layout-column>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { JwtService } from '../services/auth/jwt.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router, \r\n    private jwtService: JwtService\r\n  ) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const isAuth = next.data.isAuth || false;\r\n\r\n    if(isAuth && !this.jwtService.isAuthenticated()){\r\n      // is not logged in\r\n      return true;\r\n    }\r\n\r\n    if(isAuth && this.jwtService.isAuthenticated()){\r\n      // logged in true and isAuth\r\n      this.router.navigate(['/dashboard/profile']);\r\n      return false;\r\n    }\r\n    \r\n    if (this.jwtService.isAuthenticated()) {\r\n      // logged in so return true\r\n      return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/auth/login'], { queryParams: { returnUrl: state.url } });\r\n    return false;\r\n  }\r\n  \r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title: 'TimeTracker'\r\n}\r\n","<nb-layout>\r\n\r\n  <nb-layout-header> \r\n  </nb-layout-header>\r\n\r\n  <nb-layout-column>\r\n    <router-outlet></router-outlet>\r\n  </nb-layout-column>\r\n\r\n</nb-layout>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\r\nimport { ProfileComponent } from './views/dashboard/profile/profile.component';\r\nimport { NbThemeModule, NbLayoutModule, NbButtonModule, NbSidebarModule, NbMenuModule, NbTabsetModule, NbRouteTabsetModule, NbInputModule, NbCardModule, NbIconModule, NbSpinnerModule } from '@nebular/theme';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { LoginComponent } from './views/auth/login/login.component';\r\nimport { RegisterComponent } from './views/auth/register/register.component';\r\n\r\nimport { AuthGuard } from './core/guards/auth.guard';\r\nimport { TokenInterceptorService } from './core/services/auth/token-interceptor.service';\r\n\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ProfileComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    NbThemeModule.forRoot({ name: 'default' }),\r\n    NbLayoutModule,\r\n    NbEvaIconsModule,\r\n    NbIconModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NbSidebarModule.forRoot(), // NbSidebarModule.forRoot(), //if this is your app.module\r\n    NbButtonModule,\r\n    NbMenuModule.forRoot(),\r\n    NbTabsetModule,\r\n    NbRouteTabsetModule,\r\n    NbInputModule,\r\n    NbCardModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter\r\n      }\r\n    }),\r\n    NbSpinnerModule\r\n  ],\r\n  schemas: [ \r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LogoutComponent } from './views/auth/logout/logout.component';\r\nimport { LoginComponent } from './views/auth/login/login.component';\r\nimport { RegisterComponent } from './views/auth/register/register.component';\r\nimport { ProfileComponent } from './views/dashboard/profile/profile.component';\r\nimport { AuthGuard } from './core/guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'auth',\r\n    canActivate: [ AuthGuard ],\r\n    data: { isAuth: true },\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: RegisterComponent\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'logout',\r\n    component: LogoutComponent\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    canActivate: [ AuthGuard ],\r\n    children: [\r\n      {\r\n        path: 'profile',\r\n        component: ProfileComponent\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: ''\r\n  } //Make sure this object is the last item in the array. Add all new routes above this one.\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}