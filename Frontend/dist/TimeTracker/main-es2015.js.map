{"version":3,"sources":["./src/app/views/auth/login/login.component.ts","./src/app/views/auth/login/login.component.html","./src/app/core/services/auth/token-interceptor.service.ts","./src/app/core/services/auth/auth-api.service.ts","./src/environments/environment.ts","./src/app/core/services/auth/jwt.service.ts","./src/app/views/auth/logout/logout.component.ts","./src/app/views/auth/register/register.component.ts","./src/app/views/auth/register/register.component.html","./src/app/views/dashboard/profile/profile.component.ts","./src/app/views/dashboard/profile/profile.component.html","./src/app/core/guards/auth.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { GenericResponseDTO } from '../../../core/models/GenericResponseDTO.model';\r\nimport { AuthApiService } from '../../../core/services/auth/auth-api.service';\r\nimport { JwtService } from '../../../core/services/auth/jwt.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup = new FormGroup({\r\n    email: new FormControl(''),\r\n    password: new FormControl('')\r\n  });\r\n\r\n  error: string;\r\n  isLoading: boolean = false;\r\n\r\n  constructor(\r\n    private authService: AuthApiService,\r\n    private JwtService: JwtService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login(loginForm: any) {\r\n    this.error = '';\r\n    this.isLoading = true;\r\n    if(!loginForm.email || !loginForm.password){\r\n      this.error = \"Please enter email and password.\";\r\n      this.isLoading = false;\r\n      return;\r\n    } \r\n\r\n    this.authService.login({ \r\n      Email: loginForm.email, \r\n      Password: loginForm.password \r\n    }).subscribe((response: GenericResponseDTO) => {\r\n      if(response.success) {\r\n        // Handle Successful Login\r\n        this.JwtService.setTokens(response.data.accessToken, response.data.refreshToken);\r\n  \r\n        // TODO: Remove alert and route to dashboard\r\n        this.router.navigate(['/dashboard/profile']);\r\n      } else {\r\n        this.loginForm.controls['password'].reset();\r\n        this.error = response.message;\r\n      }\r\n      this.isLoading = false;\r\n    }, (error: any) => {\r\n      this.error = 'API Not Connected.';\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n}\r\n","<nb-layout-column class=\"column\">\r\n    <nb-card class=\"login-container\">\r\n      <nb-card-header>\r\n        <h4 class=\"text-black\">Login</h4>\r\n      </nb-card-header>\r\n\r\n      <nb-card-body [formGroup]=\"loginForm\">\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Email address\"\r\n              formControlName=\"email\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Password\"\r\n              formControlName=\"password\"\r\n            />\r\n          </div>\r\n\r\n          <p class=\"error\" *ngIf=\"error\">{{ error }}</p>\r\n\r\n          <div class=\"form-group\">\r\n            <button \r\n              nbButton \r\n              fullWidth \r\n              status=\"success\" \r\n              (click)=\"login(loginForm.value)\"\r\n              [nbSpinner]=\"isLoading\"\r\n              [disabled]=\"isLoading\"\r\n              nbSpinnerStatus=\"success\">\r\n              Login\r\n            </button>\r\n          </div>\r\n          <nb-actions>\r\n            <nb-action>Not a member? <span class=\"clickable\" routerLink=\"/auth/register\">Register</span></nb-action>\r\n          </nb-actions>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </nb-layout-column>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { JwtService } from './jwt.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(public jwtService: JwtService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    if (this.jwtService.isAuthenticated()) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${this.jwtService.getJWT()}`\r\n        }\r\n      });\r\n      return next.handle(request);\r\n    } else {\r\n      return next.handle(request);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { UserDto } from '../../models/auth/UserDto.model';\r\nimport { RefreshDto } from '../../models/auth/RefreshDto.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthApiService {\r\n\r\n  private api: string = environment.api;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(loginUser: UserDto) {\r\n    return this.http.post(`${this.api}/Auth/Login`, loginUser);\r\n  }\r\n\r\n  register(registerUser: UserDto) {\r\n    return this.http.post(`${this.api}/Auth/Register`, registerUser);\r\n  }\r\n\r\n  refresh(refresh: RefreshDto) {\r\n    return this.http.post(`${this.api}/Auth/Refresh`, refresh);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api: 'https://localhost:5001'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { PayloadDTO } from '../../models/auth/PayloadDto.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtService {\r\n\r\n  constructor(public jwtHelper: JwtHelperService) {}\r\n\r\n  public setTokens(jwt: string, refresh: string) {\r\n    localStorage.setItem('accessToken', jwt);\r\n    localStorage.setItem('refreshToken', refresh);\r\n  }\r\n\r\n  public decode(): PayloadDTO {\r\n    try{\r\n      return this.jwtHelper.decodeToken(localStorage.getItem('accessToken'));\r\n    } catch {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public getJWT(){\r\n    return localStorage.getItem('accessToken');\r\n  }\r\n\r\n  public isAuthenticated() {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n\r\n    try {\r\n      return !this.jwtHelper.isTokenExpired(accessToken);\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public logout(){\r\n    localStorage.clear();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { JwtService } from 'src/app/core/services/auth/jwt.service';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  template: '<p>Logging Out...</p>'\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private jwtService: JwtService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.jwtService.logout();\r\n    this.router.navigate(['/auth/login'])\r\n  }\r\n\r\n}\r\n","import { Route } from '@angular/compiler/src/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GenericResponseDTO } from '../../../core/models/GenericResponseDTO.model';\r\nimport { AuthApiService } from '../../../core/services/auth/auth-api.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerForm: FormGroup = new FormGroup({\r\n    firstName: new FormControl(''),\r\n    lastName: new FormControl(''),\r\n    email: new FormControl(''),\r\n    password: new FormControl(''),\r\n    confirmPassword: new FormControl(''),\r\n    inviteCode: new FormControl('')\r\n  });\r\n\r\n  error: string;\r\n  isLoading: boolean = false;\r\n\r\n  constructor(\r\n    private authService: AuthApiService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm.patchValue({\r\n      inviteCode: this.activatedRoute.snapshot.queryParamMap.get('inviteCode')\r\n    });\r\n  }\r\n\r\n  register(registerForm: any) {\r\n    this.error = '';\r\n    this.isLoading = true;\r\n    if(!registerForm.firstName || \r\n      !registerForm.lastName || \r\n      !registerForm.email || \r\n      !registerForm.password ||\r\n      !registerForm.confirmPassword){\r\n      this.error = \"Please enter all fields.\";\r\n      this.isLoading = false;\r\n      return;\r\n    } \r\n\r\n    this.authService.register({ \r\n      Email: registerForm.email, \r\n      Password: registerForm.password, \r\n      Name: `${registerForm.firstName.trim()} ${registerForm.lastName.trim()}`,\r\n      InviteCode: registerForm.inviteCode\r\n    }).subscribe((response: GenericResponseDTO) => {\r\n      if(response.success) {\r\n        // Handle Successful Registration\r\n        this.router.navigate(['/auth/login']);\r\n      } else {\r\n        this.error = response.message;\r\n      }\r\n      this.isLoading = false;\r\n    }, (error: any) => {\r\n      this.error = 'API Not Connected.';\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n}\r\n","<nb-layout-column class=\"column\">\r\n    <nb-card class=\"register-container\">\r\n      <nb-card-header>\r\n        <h4 class=\"text-black\">Register</h4>\r\n      </nb-card-header>\r\n\r\n      <nb-card-body [formGroup]=\"registerForm\">\r\n         <div class=\"form-group\">\r\n            <input\r\n              type=\"name\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"First Name\"\r\n              formControlName=\"firstName\"\r\n            />\r\n          </div>\r\n           <div class=\"form-group\">\r\n            <input\r\n              type=\"name\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Last Name\"\r\n              formControlName=\"lastName\"\r\n            />\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"email\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Email address\"\r\n              formControlName=\"email\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Password\"\r\n              formControlName=\"password\"\r\n            />\r\n          </div>\r\n        <div class=\"form-group\">\r\n            <input\r\n              type=\"password\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Confirm Password\"\r\n              formControlName=\"confirmPassword\"\r\n            />\r\n          </div>\r\n\r\n          <p class=\"error\" *ngIf=\"error\">{{ error }}</p>\r\n          \r\n          <div class=\"form-group\">\r\n            <button \r\n              nbButton \r\n              fullWidth \r\n              status=\"success\" \r\n              (click)=\"register(registerForm.value)\"\r\n              [nbSpinner]=\"isLoading\"\r\n              [disabled]=\"isLoading\"\r\n              nbSpinnerStatus=\"success\">\r\n              Register\r\n          </button>\r\n          </div>\r\n          <nb-actions>\r\n            <nb-action>Already a member? <span class=\"clickable\" routerLink=\"/auth/login\">Login</span></nb-action>\r\n          </nb-actions>\r\n      </nb-card-body>\r\n    </nb-card>\r\n  </nb-layout-column>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <nb-layout-column>\r\n    <h3>Basic Info</h3>\r\n\r\n    <div class=\"line\">\r\n      <div class=\"row\">\r\n        <nb-card-body class=\"form\">\r\n          <div class=\"col-25\">\r\n            <label for=\"firstName\">First Name</label>\r\n          </div>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"firstName\"\r\n              nbInput\r\n              placeholder=\"First Name\"\r\n            />\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <nb-card-body class=\"form\">\r\n          <div class=\"col-25\">\r\n            <label for=\"lastName\">Last Name</label>\r\n          </div>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"text\"\r\n              id=\"lastName\"\r\n              nbInput\r\n              placeholder=\"Last Name\"\r\n            />\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <nb-card-body class=\"form\">\r\n          <div class=\"col-25\">\r\n            <label for=\"email\">Email</label>\r\n          </div>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              nbInput\r\n              placeholder=\"Email\"\r\n              disabled\r\n            />\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <nb-card-body>\r\n          <div class=\"col-25\">\r\n            <button nbButton status=\"success\">Update Info</button>\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"line\">\r\n      <div class=\"row\">\r\n        <nb-card-body>\r\n          <h4>Change Password</h4>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"password\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Current Password\"\r\n            />\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <nb-card-body>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"password\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"New Password\"\r\n            />\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <nb-card-body>\r\n          <div class=\"col-75\">\r\n            <input\r\n              type=\"password\"\r\n              nbInput\r\n              fullWidth\r\n              status=\"primary\"\r\n              placeholder=\"Verify New Password\"\r\n            />\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n      <div class=\"row\">\r\n        <nb-card-body>\r\n          <div class=\"col-25\">\r\n            <button nbButton status=\"control\">Change Password</button>\r\n          </div>\r\n        </nb-card-body>\r\n      </div>\r\n    </div>\r\n  </nb-layout-column>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { JwtService } from '../services/auth/jwt.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router, \r\n    private jwtService: JwtService\r\n  ) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const isAuth = next.data.isAuth || false;\r\n\r\n    if(isAuth && !this.jwtService.isAuthenticated()){\r\n      // is not logged in\r\n      return true;\r\n    }\r\n\r\n    if(isAuth && this.jwtService.isAuthenticated()){\r\n      // logged in true and isAuth\r\n      this.router.navigate(['/dashboard/profile']);\r\n      return false;\r\n    }\r\n    \r\n    if (this.jwtService.isAuthenticated()) {\r\n      // logged in so return true\r\n      return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/auth/login'], { queryParams: { returnUrl: state.url } });\r\n    return false;\r\n  }\r\n  \r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title: 'TimeTracker'\r\n}\r\n","<nb-layout>\r\n\r\n  <nb-layout-header> \r\n  </nb-layout-header>\r\n\r\n  <nb-layout-column>\r\n    <router-outlet></router-outlet>\r\n  </nb-layout-column>\r\n\r\n</nb-layout>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\r\nimport { ProfileComponent } from './views/dashboard/profile/profile.component';\r\nimport { NbThemeModule, NbLayoutModule, NbButtonModule, NbSidebarModule, NbMenuModule, NbTabsetModule, NbRouteTabsetModule, NbInputModule, NbCardModule, NbIconModule, NbSpinnerModule } from '@nebular/theme';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { LoginComponent } from './views/auth/login/login.component';\r\nimport { RegisterComponent } from './views/auth/register/register.component';\r\n\r\nimport { AuthGuard } from './core/guards/auth.guard';\r\nimport { TokenInterceptorService } from './core/services/auth/token-interceptor.service';\r\n\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ProfileComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    NbThemeModule.forRoot({ name: 'default' }),\r\n    NbLayoutModule,\r\n    NbEvaIconsModule,\r\n    NbIconModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NbSidebarModule.forRoot(), // NbSidebarModule.forRoot(), //if this is your app.module\r\n    NbButtonModule,\r\n    NbMenuModule.forRoot(),\r\n    NbTabsetModule,\r\n    NbRouteTabsetModule,\r\n    NbInputModule,\r\n    NbCardModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter\r\n      }\r\n    }),\r\n    NbSpinnerModule\r\n  ],\r\n  schemas: [ \r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LogoutComponent } from './views/auth/logout/logout.component';\r\nimport { LoginComponent } from './views/auth/login/login.component';\r\nimport { RegisterComponent } from './views/auth/register/register.component';\r\nimport { ProfileComponent } from './views/dashboard/profile/profile.component';\r\nimport { AuthGuard } from './core/guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'auth',\r\n    canActivate: [ AuthGuard ],\r\n    data: { isAuth: true },\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: LoginComponent\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: RegisterComponent\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: 'logout',\r\n    component: LogoutComponent\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    canActivate: [ AuthGuard ],\r\n    children: [\r\n      {\r\n        path: 'profile',\r\n        component: ProfileComponent\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: ''\r\n  } //Make sure this object is the last item in the array. Add all new routes above this one.\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}